{"version":3,"file":"static/js/136.b4b3e837.chunk.js","mappings":"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","sources":["components/comicsList/ComicsList.js","components/appBanner/AppBanner.js","components/pages/ComicsPage.js"],"sourcesContent":["import {useState, useEffect, useRef} from 'react';\n\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport useMarvelService from \"../../services/MarvelService\";\nimport {Link} from \"react-router-dom\";\n\nimport './comicsList.scss';\n\nimport uw from '../../resources/img/UW.png';\nimport xMen from '../../resources/img/x-men.png';\n\nconst ComicsList = () => {\n\n    const [comicsList, setComicsList] = useState([]);\n    const [newItemLoading, setNewItemLoading] = useState(false);\n    const [offset, setOffset] = useState(250);\n    const [comicsEnded, setComicsEnded] = useState(false);\n\n    const {loading, error, getAllComics} = useMarvelService();\n\n    useEffect(() => {\n        onRequest(offset, true);\n    }, [])\n\n    const onRequest = (offset, initial) => {\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\n        getAllComics(offset)\n            .then(onComicsListLoaded)\n    }\n\n    const onComicsListLoaded = (newComicsList) => {\n        let ended = false;\n        if (newComicsList.length < 8) {\n            ended = true;\n        }\n        setComicsList([...comicsList, ...newComicsList]);\n        setNewItemLoading(newItemLoading => false);\n        setOffset(offset + 8);\n        setComicsEnded(comicsEnded => ended);\n    }\n\n    function renderItems(arr) {\n        const items = arr.map((item) => {\n            return (\n                <li className=\"comics__item\" key={item.id}>\n                    <Link to={`/comics/${item.id}`}>\n                        <img src={item.thumbnail} alt={item.title} className=\"comics__item-img\"/>\n                        <div className=\"comics__item-name\">{item.title}</div>\n                        <div className=\"comics__item-price\">{item.price}</div>\n                    </Link>\n                </li>\n            )\n\n        })\n\n        return (\n            <ul className=\"comics__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n\n    const items = renderItems(comicsList);\n\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading && !newItemLoading ? <Spinner/> : null;\n\n    return (\n        <div className=\"comics__list\">\n            {errorMessage}\n            {spinner}\n            {items}\n            <button\n                disabled={newItemLoading}\n                style={{'display' : comicsEnded ? 'none' : 'block'}}\n                className=\"button button__main button__long\"\n                onClick={() => onRequest(offset)}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nexport default ComicsList;","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import ComicsList from \"../comicsList/ComicsList\";\nimport AppBanner from \"../appBanner/AppBanner\";\n\nconst ComicsPage = () => {\n    return(\n        <>\n            <AppBanner/>\n            <ComicsList/>\n        </>\n    )\n}\n\nexport default ComicsPage;\n"],"names":["_useState","useState","_useState2","_slicedToArray","comicsList","setComicsList","_useState3","_useState4","newItemLoading","setNewItemLoading","_useState5","_useState6","offset","setOffset","_useState7","_useState8","comicsEnded","setComicsEnded","_useMarvelService","useMarvelService","loading","error","getAllComics","useEffect","onRequest","initial","then","onComicsListLoaded","newComicsList","ended","length","concat","_toConsumableArray","items","arr","map","item","_jsx","className","children","_jsxs","Link","to","id","src","thumbnail","alt","title","price","renderItems","errorMessage","ErrorMessage","spinner","Spinner","disabled","style","onClick","avengers","avengersLogo","_Fragment","AppBanner","ComicsList"],"sourceRoot":""}